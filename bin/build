#!/usr/bin/env php
<?php
/* (c) Anton Medvedev <anton@medv.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

require __DIR__ . '/../vendor/autoload.php';

define('ROOT', realpath(__DIR__ . '/..'));

chdir(ROOT);

$pharName = "deploy.phar";

$pharFile = ROOT . '/' . $pharName;

if (file_exists($pharFile)) {
    unlink($pharFile);
}

$phar = new \Phar($pharFile, 0, $pharName);
$phar->setSignatureAlgorithm(\Phar::SHA1);
$phar->startBuffering();

$finder = new Symfony\Component\Finder\Finder();
$finder->files()
    ->in(ROOT . '/src')
    ->ignoreVCS(true)
    ->name('*.php')
    ->in(ROOT . '/vendor')
    ->exclude('symfony/finder');

foreach ($finder as $fileInfo) {
    $file = str_replace(ROOT, '', $fileInfo->getRealPath());
    echo "Add file: " . $file . "\n";
    $phar->addFile($fileInfo->getRealPath(), $file);
}

// Add bin/deploy file
$depContent = file_get_contents(ROOT . '/bin/deploy');
$depContent = str_replace("#!/usr/bin/env php\n", '', $depContent);

$phar->addFromString('bin/deploy', $depContent);

$stub = <<<STUB
#!/usr/bin/env php
<?php
Phar::mapPhar('{$pharName}');
require 'phar://{$pharName}/bin/deploy';
__HALT_COMPILER();
STUB;

$phar->setStub($stub);

$phar->stopBuffering();

unset($phar);

echo "$pharName was created successfully.\n";
